name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
# Gerado automáticamente daqui para cima
    
    # Instalar o Node.Js no actions
    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.3
      with: 
        node-version: 12.16.2
    
    # Cache das dependências
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    
    # Instalar as dependências NPM/Yarn
    - name: Install dependencies
      run: yarn
    
    # Executar Build
    - name: Run build
      run: yarn build
    
    # Copiar código para Digital Ocean (Ou qualquer servidor)
    - name: Copy code to Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_KEY }}
        source: "., !node_modules"
        target: "~/app/backend-healthHistory"
    
    # Instalar dependências, migrations e restart no servidor
    - name: Run productions script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd ~/app/backend-healthHistory
          yarn
          ./node_modules/.bin/typeorm migration:run
          pm2 restart healthistory-api
